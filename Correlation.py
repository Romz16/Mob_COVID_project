# -*- coding: utf-8 -*-
"""Cópia de IC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cuEXw_jYLj4HzjPHU5JgmCSi0Rn4PgHB

#Instalando
"""

# ! sudo apt-get update
# ! sudo apt-get install texlive-latex-recommended
# ! sudo apt-get install dvipng texlive-latex-extra texlive-fonts-recommended
# ! wget http://mirrors.ctan.org/macros/latex/...
# ! unzip type1cm.zip -d /tmp/type1cm
# ! cd /tmp/type1cm/type1cm/ && sudo latex type1cm.ins
# ! sudo mkdir /usr/share/texmf/tex/latex/type1cm
# ! sudo cp /tmp/type1cm/type1cm/type1cm.sty /usr/share/texmf/tex/latex/type1cm
# ! sudo texhash
# !apt install cm-super
# !pip install igraph

"""#Importando pacotes"""

import random
from matplotlib import pyplot as plt
import pandas as pd
import numpy as np
from igraph import Graph
from scipy.optimize import curve_fit
from matplotlib import rc
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import csv
import random
import seaborn as sns

"""#Setando parametro de plotagem"""

rc('text', usetex=True)
font = {'family' : 'normal',
         'weight' : 'bold',
         'size'   : 12}

rc('font', **font)
params = {'legend.fontsize': 12}
plt.rcParams.update(params)
plt.rcParams.update({
    "text.usetex": True,
    "font.family": "sans-serif",
    "font.sans-serif":"Helvetica",
})

# from google.colab import drive
# drive.mount('/content/drive')

"""# Pearson Correlation"""

df_pearson = pd.DataFrame({
    # 'date': df_date_cum_cases_amostrado['date'],
    'Normalized\nCumulative\n Cases per Day': df_date_cum_cases['Cumulative Cases per Day'],
    'Betweenness': betweenness_interp,
    'Degree': degree_interp,
    'Closeness': closeness_interp,
    'Clustering': clustering_interp,
    'Eigenvector': eignv_interp,
    'Strength': strength_interp,
})

corr = df_pearson.corr()

mask = np.triu(np.ones_like(corr, dtype=bool))

plt.figure(figsize=(12, 8))
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
plt.xticks(rotation=0)
plt.savefig(f'/content/drive/MyDrive/Colab Notebooks/IC/Correlation Pearson.pdf', bbox_inches='tight')
plt.show()

df_kendall = df_pearson.corr(method='kendall')
df_spearman = df_pearson.corr(method='spearman')

mask = np.triu(np.ones_like(df_kendall, dtype=bool))

plt.figure(figsize=(12, 8))
sns.heatmap(df_kendall, annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
plt.savefig(f'/content/drive/MyDrive/Colab Notebooks/IC/Correlation Kendall.pdf', bbox_inches='tight')
plt.show()

plt.figure(figsize=(12, 8))
sns.heatmap(df_spearman, annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
plt.savefig(f'/content/drive/MyDrive/Colab Notebooks/IC/Correlation Spearman.pdf', bbox_inches='tight')
plt.show()

"""**Codigo de novas correlações**"""

import scipy.stats as stats

df_corr = pd.DataFrame({
    'Original set': covid_cases_og,
    'Betweenness': betweenness_similarity,
    'Degree': degrees_similarity,
    'Closeness': closeness_w_similarity,
    'Clustering': clustering_similarity,
    'Eigenvector': eignv_w_similarity,
    'Strength': strength_similarity,
})


# Calculando as correlações de Pearson, Kendall e Spearman
pearson_corr = df_corr.corr(method='pearson')
kendall_corr = df_corr.corr(method='kendall')
spearman_corr = df_corr.corr(method='spearman')

pearson_pvalue = df_corr.corr(method=lambda x, y: stats.pearsonr(x, y)[1])
kendall_pvalue = df_corr.corr(method=lambda x, y: stats.kendalltau(x, y)[1])
spearman_pvalue = df_corr.corr(method=lambda x, y: stats.spearmanr(x, y)[1])

mask = np.triu(np.ones_like(pearson_corr, dtype=bool))

# Plotando os heatmaps
fig, axes = plt.subplots(2, 3, figsize=(15, 10), dpi=300)

sns.heatmap(pearson_corr, ax=axes[0, 0], annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
axes[0, 0].set_title("Pearson Correlation")

sns.heatmap(kendall_corr, ax=axes[0, 1], annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
axes[0, 1].set_title("Kendall Correlation")

sns.heatmap(spearman_corr, ax=axes[0, 2], annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
axes[0, 2].set_title("Spearman Correlation")

sns.heatmap(pearson_pvalue, ax=axes[1, 0], annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
axes[1, 0].set_title("Pearson p-value")

sns.heatmap(kendall_pvalue, ax=axes[1, 1], annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
axes[1, 1].set_title("Kendall p-value")

sns.heatmap(spearman_pvalue, ax=axes[1, 2], annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, mask=mask)
axes[1, 2].set_title("Spearman p-value")

plt.xticks(rotation=0)
plt.tight_layout()
plt.savefig(f'/content/drive/MyDrive/Colab Notebooks/IC/CorrelationsPvalues.pdf', bbox_inches='tight')
plt.show()
